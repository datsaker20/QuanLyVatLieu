/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Proccess.NhaCungCap;
import javax.swing.DefaultComboBoxModel;
import java.awt.Color;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Proccess.NhaCungCapDao;
import Proccess.NhaCungCap;
import Proccess.DataNhanVien;
import Proccess.HoaDon;
import Proccess.HoaDonDao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.DefaultComboBoxModel;
import Proccess.SanPham;
import Proccess.SanPhamDao;
import Proccess.NhanVie;
import Proccess.NhanVienDao;
import java.text.ParseException;
import Proccess.KhachHang;
import Proccess.KhachHangDao;
import java.text.SimpleDateFormat;
import Proccess.CTHoaDon;
import Proccess.CTHoaDonDao;
import Proccess.HangHoaddd;

/**
 *
 * @author tran dat
 */
public class QLCTHoaDon extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    CTHoaDonDao ctDao = new CTHoaDonDao();

    /**
     * Creates new form CTHoaDon
     */
    public QLCTHoaDon() throws Exception {
        initComponents();
        fillData();
        conn = DataNhanVien.openConnetion();
        getcb2();
        getcb1();
    }

   public void fillData() {
       DefaultTableModel tbModel = (DefaultTableModel) tblCT.getModel();
        tbModel.setRowCount(0);
        for (CTHoaDon hd : ctDao.getAll()) {
            Object dataRow[] = new Object[6];
            dataRow[0] = hd.getHD().getMaHD();
            dataRow[2] = hd.getMa().getMaHH();
            dataRow[1] = hd.getSP().getMaHH();
            dataRow[3] = hd.getSoLuong();
            dataRow[4] = hd.getDonGia();
            dataRow[5] = hd.getSoLuong() * hd.getDonGia();
            tbModel.addRow(dataRow);
        }
    } 
   
   

    private void getcb2() {
        String sql = "select* from hanghoa ";
        //  "select tenhh from HANGHOA where mahh = "+maLoai;
        try {
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                cbSP.addItem(rs.getString("MaHH"));
            }
        } catch (SQLException ex) {
            System.out.println("loi 0" + ex.getMessage());
        }

    }

    /*private String layTen(String maLoai){
        String tenLoai = "";
        String SQL = "select tenhh from HANGHOA where mahh = "+maLoai;
        ResultSet rs = ;
        try{
            while(rs.next()){
                tenLoai = rs.getString("tenhh");
            }
        }
        catch (Exception e) {
            System.out.println("mày đâu rồi");
        }
        
        return tenLoai;
    }*/
    private void getcb1() {
        String sql = "select * from Hoadon";
        try {
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                CBHD.addItem(rs.getString("MaHD"));
                //      ps.setString(3,KH.getDiaChiKH());    
            }
        } catch (SQLException ex) {
            System.out.println("loi 6" + ex.getMessage());
        }

    }
     public void LamMoiFrom() {
        txtSL.setText("");
        CBHD.setSelectedItem(null);
        cbSP.setSelectedItem(null);
        txtDonGia.setText("");

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CBHD = new javax.swing.JComboBox<>();
        cbSP = new javax.swing.JComboBox<>();
        txtSL = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        btnLuu = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCT = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Bảng Chi Tiết Hóa Đơn");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Mã Hóa Đơn");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Tên Sản Phẩm");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Số Lượng");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Đơn Giá");

        cbSP.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbSPPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        btnLuu.setText("Lưu");
        btnLuu.setToolTipText("");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jButton4.setText("Làm Mới");

        btnback.setText("Quay Lại");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        tblCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Hóa Đơn", "Mã Sản Phẩm", "Tên Sản Phẩm", "Số lượng", "Đơn Giá", "Thành Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CBHD, 0, 168, Short.MAX_VALUE)
                            .addComponent(cbSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSL)
                            .addComponent(txtDonGia))
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(71, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(btnback))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CBHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:

        if (txtDonGia.getText().equals("") || txtSL.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Đầy Đủ Thông Tin");
        } else {
            String sql = "insert into CTHoaDon  (MaHD,MaHH,soluong,dongia) Values (?,?,?,?)";
            try (
                    Connection conn = DataNhanVien.openConnetion();
                    PreparedStatement ps = conn.prepareStatement(sql);) {
                String MaHD = CBHD.getSelectedItem().toString();
                String MaSP = cbSP.getSelectedItem().toString();
                /// maLoai = item.DisplayValue.toString();
                String dongia = txtDonGia.getText();
                String solg = txtSL.getText();
                ps.setString(1, MaHD);
                ps.setString(2, MaSP);
                ps.setString(4, dongia);
                ps.setString(3, solg);
                if (ps.executeUpdate() > 0) {
                    System.out.println("Them Thanh Cong!");
                    fillData();
                    LamMoiFrom();
                }
            } catch (Exception ex) {
                System.out.println("loi 10: " + ex.getMessage());
            }
        }

        /*  String manv,soLuong,donViTinh,giaBan,maLoai;
       Object [] abc = cbbmanv.getSelectedObjects();
        DisplayComboBoxModel atem = (DisplayComboBoxModel) abc[0];
        manv = atem.DisplayValue.toString();
        //
        soLuong = txtsoluong.getText();
        donViTinh = txtthanhtien.getText();
        giaBan = txtdongia.getText();
        //
        Object [] obj = cbbhh.getSelectedObjects();
        DisplayComboBoxModel item = (DisplayComboBoxModel) obj[0];
        maLoai = item.DisplayValue.toString();
        
        String SQL = "insert into CTHOADON(mahd,mahh,soluong,dongia,thanhtien)"
                + " values('"+manv+"',N'"+maLoai+"',"+soLuong+",N'"+giaBan+"',"
                + ""+donViTinh+")";
        if(  "".equals(donViTinh) && "".equals(giaBan)){
            Main.thongBao("Bạn chưa nhập đầy đủ dữ liệu", "Thông Báo", 1);
        }
        else{
            Main.connection.ExcuteQueryUpdateDB(SQL);
            Main.thongBao("thêm thành công", "thông báo", 1);
        }
        LayDuLieu();
    }      */

    }//GEN-LAST:event_btnLuuActionPerformed

    private void cbSPPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbSPPopupMenuWillBecomeInvisible
        // TODO add your handling code here:

        String item = (String) cbSP.getSelectedItem();
        String sql = "select * from hanghoa where mahh=?";
        try {
            ps = conn.prepareStatement(sql);
            ps.setString(1, item);
            rs = ps.executeQuery();
            if (rs.next()) {
                txtDonGia.setText(rs.getString("GiaBan"));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbSPPopupMenuWillBecomeInvisible

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        
         String sql = "update ctHOADON set MaHH=?,Soluong=?,dongia=? where MaHD=?";
        try (
                Connection conn = DataNhanVien.openConnetion();
                PreparedStatement ps = conn.prepareStatement(sql);) {
          
           String MaHD =  CBHD.getSelectedItem().toString();
           String MaHH =  cbSP.getSelectedItem().toString();
            String SL = txtSL.getText();
             String DG = txtDonGia.getText();
            ps.setString(4, MaHD);
            ps.setString(1, MaHH);
            ps.setString(2, SL);
            ps.setString(3, DG);
            if(ps.executeUpdate()>0){
                 System.out.println("Sửa Thanh Cong!");
                 fillData();
                 LamMoiFrom();
             }
        } 
         catch (Exception ex) {
           System.out.println("loi 11: " +ex.getMessage());
        }
       
        
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTMouseClicked
        // TODO add your handling code here:
         int row = tblCT.getSelectedRow();
        if (row >= 0) {
            
            CBHD.getModel().setSelectedItem(tblCT.getValueAt(row, 0));
            cbSP.getModel().setSelectedItem(tblCT.getValueAt(row, 1));
            txtSL.setText(tblCT.getValueAt(row, 3).toString());
            txtDonGia.setText(tblCT.getValueAt(row, 4).toString());
            
           
        }
    }//GEN-LAST:event_tblCTMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        
        
        
         StringBuilder sb = new StringBuilder();
                if (CBHD.getSelectedItem()==null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn đối tượng để xóa");

        } else {
            
            if (sb.length() > 0) {
                JOptionPane.showMessageDialog(this, sb);
                return;
            }
            if (JOptionPane.showConfirmDialog(this, "Xác Nhận Xóa Sản Phẩm") == JOptionPane.NO_OPTION) {
                return;
            }
            try {
                ctDao.delete(CBHD.getSelectedItem().toString());
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
                fillData();
                LamMoiFrom();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Lỗi:" + ex.getMessage());
            }

        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        
       QLHoaDon hd=new QLHoaDon();
       hd.show();
       dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CTHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CTHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CTHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CTHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new QLCTHoaDon().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(QLCTHoaDon.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBHD;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnback;
    private javax.swing.JComboBox<String> cbSP;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCT;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtSL;
    // End of variables declaration//GEN-END:variables
}
